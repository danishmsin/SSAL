Dataset multi Source real Target sketch Labeled num perclass 3 Network resnet34
126 classes in this dataset
Unlabelled Target Dataset Size:  23826
Labelled Target Dataset Size:  378
Bank keys - Target:  dict_keys(['feat_vec', 'labels', 'names', 'domain_identifier']) Source:  dict_keys(['feat_vec', 'labels', 'names', 'domain_identifier'])
Num  - Target:  23826 Source:  70358
S real T sketch Train Ep: 0 lr0.01 	 Loss Classification: 4.903921 Loss T 0.470275 Method MME

S real T sketch Train Ep: 100 lr0.009925650290240803 	 Loss Classification: 1.737942 Loss T 0.300003 Method MME

S real T sketch Train Ep: 200 lr0.009852577760521605 	 Loss Classification: 0.951352 Loss T 0.227833 Method MME

S real T sketch Train Ep: 300 lr0.009780748269686728 	 Loss Classification: 0.834728 Loss T 0.219145 Method MME

S real T sketch Train Ep: 400 lr0.009710128909124701 	 Loss Classification: 1.197246 Loss T 0.185395 Method MME

S real T sketch Train Ep: 500 lr0.00964068794694323 	 Loss Classification: 1.220733 Loss T 0.147918 Method MME


Labeled Target set: Average loss: 2.5779, Accuracy: 468/1080 F1 (43.3333%)


Test set: Average loss: 2.6277, Accuracy: 10812/23808 F1 (45.4133%)


Val set: Average loss: 2.4108, Accuracy: 174/360 F1 (48.3333%)

best acc test 45.413306  acc val 48.333333 acc labeled target 43.333333
saving model...
S real T sketch Train Ep: 600 lr0.00957239477517603 	 Loss Classification: 0.660836 Loss T 0.142034 Method MME

S real T sketch Train Ep: 700 lr0.009505219859830012 	 Loss Classification: 0.841062 Loss T 0.166439 Method MME

S real T sketch Train Ep: 800 lr0.009439134693595126 	 Loss Classification: 0.540556 Loss T 0.168545 Method MME

S real T sketch Train Ep: 900 lr0.009374111751051751 	 Loss Classification: 0.721753 Loss T 0.164516 Method MME

S real T sketch Train Ep: 1000 lr0.009310124446222227 	 Loss Classification: 0.816718 Loss T 0.130762 Method MME


Labeled Target set: Average loss: 2.4927, Accuracy: 494/1080 F1 (45.7407%)


Test set: Average loss: 2.3762, Accuracy: 12091/23808 F1 (50.7854%)


Val set: Average loss: 2.0713, Accuracy: 189/360 F1 (52.5000%)

best acc test 50.785450  acc val 52.500000 acc labeled target 45.740741
saving model...
S real T sketch Train Ep: 1100 lr0.00924714709232377 	 Loss Classification: 0.804179 Loss T 0.135764 Method MME

S real T sketch Train Ep: 1200 lr0.009185154863590003 	 Loss Classification: 1.653233 Loss T 0.143342 Method MME

S real T sketch Train Ep: 1300 lr0.00912412375903735 	 Loss Classification: 0.670912 Loss T 0.136272 Method MME

S real T sketch Train Ep: 1400 lr0.009064030568061049 	 Loss Classification: 0.884971 Loss T 0.154890 Method MME

S real T sketch Train Ep: 1500 lr0.009004852837753237 	 Loss Classification: 0.936013 Loss T 0.108733 Method MME


Labeled Target set: Average loss: 2.2273, Accuracy: 575/1080 F1 (53.2407%)


Test set: Average loss: 2.2461, Accuracy: 12855/23808 F1 (53.9945%)


Val set: Average loss: 2.0584, Accuracy: 200/360 F1 (55.5556%)

best acc test 53.994456  acc val 55.555556 acc labeled target 53.240741
saving model...
S real T sketch Train Ep: 1600 lr0.008946568841842816 	 Loss Classification: 0.952308 Loss T 0.148880 Method MME

S real T sketch Train Ep: 1700 lr0.008889157551163433 	 Loss Classification: 0.791991 Loss T 0.115513 Method MME

S real T sketch Train Ep: 1800 lr0.008832598605562044 	 Loss Classification: 1.552190 Loss T 0.117051 Method MME

S real T sketch Train Ep: 1900 lr0.008776872287166303 	 Loss Classification: 0.971464 Loss T 0.153804 Method MME

S real T sketch Train Ep: 2000 lr0.008721959494934213 	 Loss Classification: 0.527792 Loss T 0.117379 Method MME


Labeled Target set: Average loss: 2.2535, Accuracy: 568/1080 F1 (52.5926%)


Test set: Average loss: 2.2233, Accuracy: 13370/23808 F1 (56.1576%)


Val set: Average loss: 2.0822, Accuracy: 197/360 F1 (54.7222%)

best acc test 53.994456  acc val 54.722222 acc labeled target 52.592593
saving model...
S real T sketch Train Ep: 2100 lr0.008667841720414475 	 Loss Classification: 0.573723 Loss T 0.110384 Method MME

S real T sketch Train Ep: 2200 lr0.008614501024650454 	 Loss Classification: 1.049617 Loss T 0.134306 Method MME

S real T sketch Train Ep: 2300 lr0.008561920016164943 	 Loss Classification: 1.230952 Loss T 0.093916 Method MME

S real T sketch Train Ep: 2400 lr0.008510081829966844 	 Loss Classification: 0.709603 Loss T 0.107063 Method MME

S real T sketch Train Ep: 2500 lr0.008458970107524513 	 Loss Classification: 0.657938 Loss T 0.099208 Method MME


Labeled Target set: Average loss: 2.2803, Accuracy: 564/1080 F1 (52.2222%)


Test set: Average loss: 2.1821, Accuracy: 13410/23808 F1 (56.3256%)


Val set: Average loss: 1.9764, Accuracy: 207/360 F1 (57.5000%)

best acc test 56.325605  acc val 57.500000 acc labeled target 52.222222
saving model...
S real T sketch Train Ep: 2600 lr0.008408568977653933 	 Loss Classification: 0.743897 Loss T 0.106987 Method MME

S real T sketch Train Ep: 2700 lr0.00835886303827305 	 Loss Classification: 1.082689 Loss T 0.122908 Method MME

S real T sketch Train Ep: 2800 lr0.008309837338976545 	 Loss Classification: 0.918003 Loss T 0.101850 Method MME

S real T sketch Train Ep: 2900 lr0.008261477364388068 	 Loss Classification: 0.697442 Loss T 0.096425 Method MME

S real T sketch Train Ep: 3000 lr0.008213769018249545 	 Loss Classification: 0.122234 Loss T 0.105498 Method MME


Labeled Target set: Average loss: 2.2747, Accuracy: 577/1080 F1 (53.4259%)


Test set: Average loss: 2.2361, Accuracy: 13770/23808 F1 (57.8377%)


Val set: Average loss: 2.0060, Accuracy: 215/360 F1 (59.7222%)

best acc test 57.837702  acc val 59.722222 acc labeled target 53.425926
saving model...
S real T sketch Train Ep: 3100 lr0.008166698608209509 	 Loss Classification: 1.277949 Loss T 0.068081 Method MME

S real T sketch Train Ep: 3200 lr0.008120252831274708 	 Loss Classification: 0.952782 Loss T 0.102532 Method MME

S real T sketch Train Ep: 3300 lr0.008074418759891278 	 Loss Classification: 0.900668 Loss T 0.090605 Method MME

S real T sketch Train Ep: 3400 lr0.008029183828623731 	 Loss Classification: 0.377837 Loss T 0.085134 Method MME

[W python_anomaly_mode.cpp:104] Warning: Error detected in MulBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
tensor(24., device='cuda:0', dtype=torch.float64)
S real T sketch Train Ep: 3500 lr0.007984535821401871 	 Loss Classification: 0.345131 Loss T 0.098872 Method MME

main_classwise.py:216: RuntimeWarning: divide by zero encountered in true_divide
  per_cls_weights = (1.0 - beta) / np.array(effective_num)
main_classwise.py:217: RuntimeWarning: invalid value encountered in true_divide
  per_cls_weights = per_cls_weights / np.sum(per_cls_weights) * len(class_num_list)

Labeled Target set: Average loss: 2.2479, Accuracy: 609/1080 F1 (56.3889%)


Test set: Average loss: 2.1399, Accuracy: 14182/23808 F1 (59.5682%)

[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in MulBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in MulBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)

Val set: Average loss: 1.8802, Accuracy: 217/360 F1 (60.2778%)

best acc test 59.568212  acc val 60.277778 acc labeled target 56.388889
saving model...
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in MulBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in MulBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in MulBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
[W python_anomaly_mode.cpp:104] Warning: Error detected in MulBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in MulBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in MulBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
[W python_anomaly_mode.cpp:104] Warning: Error detected in MulBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in MulBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in MulBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in MulBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in MulBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in MulBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
[W python_anomaly_mode.cpp:104] Warning: Error detected in MulBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in MulBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in MulBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in MulBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in MulBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in MulBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in MulBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
tensor(24., device='cuda:0', dtype=torch.float64)
S real T sketch Train Ep: 3600 lr0.007940462859307384 	 Loss Classification: 0.585462 Loss T 0.078815 Method MME

tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
[W python_anomaly_mode.cpp:104] Warning: Error detected in MulBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in MulBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in MulBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in MulBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in MulBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in MulBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in MulBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in MulBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in MulBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in MulBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in MulBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in MulBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in MulBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in MulBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in MulBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
[W python_anomaly_mode.cpp:104] Warning: Error detected in MulBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in MulBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in MulBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
S real T sketch Train Ep: 3700 lr0.007896953388873518 	 Loss Classification: 0.544676 Loss T 0.100362 Method MME

tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
[W python_anomaly_mode.cpp:104] Warning: Error detected in MulBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in MulBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in MulBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in MulBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in MulBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in MulBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in MulBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in MulBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in MulBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in MulBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in MulBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in MulBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in MulBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
[W python_anomaly_mode.cpp:104] Warning: Error detected in MulBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in MulBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in MulBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in MulBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in MulBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
S real T sketch Train Ep: 3800 lr0.007853996170872714 	 Loss Classification: 0.952473 Loss T 0.093421 Method MME

tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in MulBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in MulBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in MulBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in MulBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in MulBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in MulBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in MulBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in MulBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in MulBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in MulBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in MulBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in MulBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in MulBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in MulBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in MulBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in MulBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in MulBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in MulBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in MulBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
tensor(24., device='cuda:0', dtype=torch.float64)
S real T sketch Train Ep: 3900 lr0.00781158026956848 	 Loss Classification: 0.747628 Loss T 0.077963 Method MME

tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in MulBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in MulBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in MulBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
[W python_anomaly_mode.cpp:104] Warning: Error detected in MulBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in MulBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in MulBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
[W python_anomaly_mode.cpp:104] Warning: Error detected in MulBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in MulBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
[W python_anomaly_mode.cpp:104] Warning: Error detected in MulBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in MulBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in MulBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in MulBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in MulBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in MulBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in MulBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
S real T sketch Train Ep: 4000 lr0.007769695042409123 	 Loss Classification: 0.775007 Loss T 0.083985 Method MME


Labeled Target set: Average loss: 2.0289, Accuracy: 625/1080 F1 (57.8704%)


Test set: Average loss: 2.0640, Accuracy: 14579/23808 F1 (61.2357%)

[W python_anomaly_mode.cpp:104] Warning: Error detected in MulBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in MulBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)

Val set: Average loss: 1.9535, Accuracy: 223/360 F1 (61.9444%)

best acc test 61.235719  acc val 61.944444 acc labeled target 57.870370
saving model...
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in MulBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in MulBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in MulBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in MulBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in MulBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in MulBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in MulBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in MulBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in MulBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in MulBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in MulBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in MulBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in MulBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in MulBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in MulBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in MulBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in MulBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in MulBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in MulBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
S real T sketch Train Ep: 4100 lr0.007728330130142108 	 Loss Classification: 0.760058 Loss T 0.082370 Method MME

tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in MulBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in MulBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in MulBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in MulBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in MulBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in MulBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in MulBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in MulBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in MulBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in MulBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in MulBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in MulBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in MulBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in MulBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in MulBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in MulBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in MulBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in MulBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
tensor(24., device='cuda:0', dtype=torch.float64)
S real T sketch Train Ep: 4200 lr0.007687475447329114 	 Loss Classification: 0.535009 Loss T 0.079458 Method MME

tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in MulBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in MulBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in MulBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in MulBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in MulBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in MulBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in MulBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in MulBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in MulBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in MulBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in MulBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
[W python_anomaly_mode.cpp:104] Warning: Error detected in MulBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in MulBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in MulBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in MulBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in MulBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
S real T sketch Train Ep: 4300 lr0.0076471211732427845 	 Loss Classification: 0.861637 Loss T 0.079389 Method MME

tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in MulBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in MulBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in MulBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in MulBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in MulBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
[W python_anomaly_mode.cpp:104] Warning: Error detected in PowBackward0. Traceback of forward call that caused the error:
  File "main_classwise.py", line 369, in <module>
    train()
  File "main_classwise.py", line 221, in train
    loss_lab_target = criterion_lab_target(out_lab_target,gt_labels_t)
  File "/home/megh/anaconda3/envs/ssal/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 69, in forward
    return focal_loss(F.cross_entropy(input, target, reduction='none', weight=self.weight), self.gamma)
  File "/home/megh/projects/domain-adaptation/SSAL/utils/loss.py", line 58, in focal_loss
    loss = (1 - p) ** gamma * input_values
 (function _print_stack)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
S real T sketch Train Ep: 4400 lr0.007607257743127307 	 Loss Classification: 0.951634 Loss T 0.129914 Method MME

tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
200
201
202
203
204
205
206
207
208
209
210
211
212
213
214
215
216
217
218
219
220
221
222
223
224
225
226
227
228
229
230
231
232
233
234
235
236
237
238
239
240
241
242
243
244
245
246
247
248
249
250
251
252
253
254
255
256
257
258
259
260
261
262
263
264
265
266
267
268
269
270
271
272
273
274
275
276
277
278
279
280
281
282
283
284
285
286
287
288
289
290
291
292
293
294
295
296
297
298
299
300
301
302
303
304
305
306
307
308
309
310
311
312
313
314
315
316
317
318
319
320
321
322
323
324
325
326
327
328
329
330
331
332
333
334
335
336
337
338
339
340
341
342
343
344
345
346
347
348
349
350
351
352
353
354
355
356
357
358
359
360
361
362
363
364
365
366
367
368
369
370
371
372
373
374
375
376
377
Assigned Classwise weights to source
tensor(24., device='cuda:0', dtype=torch.float64)
S real T sketch Train Ep: 4500 lr0.007567875839805858 	 Loss Classification: 0.619910 Loss T 0.084388 Method MME


Labeled Target set: Average loss: 0.4010, Accuracy: 964/1080 F1 (89.2593%)


Test set: Average loss: 2.3359, Accuracy: 13432/23808 F1 (56.4180%)


Val set: Average loss: 1.9720, Accuracy: 210/360 F1 (58.3333%)

best acc test 61.235719  acc val 58.333333 acc labeled target 89.259259
saving model...
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
S real T sketch Train Ep: 4600 lr0.007528966385618854 	 Loss Classification: 0.599623 Loss T 0.069000 Method MME

tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
S real T sketch Train Ep: 4700 lr0.007490520534677821 	 Loss Classification: 0.890712 Loss T 0.101892 Method MME

tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
S real T sketch Train Ep: 4800 lr0.007452529665420465 	 Loss Classification: 0.472455 Loss T 0.072594 Method MME

tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
S real T sketch Train Ep: 4900 lr0.007414985373453289 	 Loss Classification: 0.818971 Loss T 0.103089 Method MME

tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
S real T sketch Train Ep: 5000 lr0.007377879464668811 	 Loss Classification: 0.904494 Loss T 0.100019 Method MME


Labeled Target set: Average loss: 0.0822, Accuracy: 1060/1080 F1 (98.1481%)


Test set: Average loss: 1.9259, Accuracy: 15204/23808 F1 (63.8609%)


Val set: Average loss: 1.5315, Accuracy: 242/360 F1 (67.2222%)

best acc test 63.860887  acc val 67.222222 acc labeled target 98.148148
saving model...
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
S real T sketch Train Ep: 5100 lr0.007341203948625087 	 Loss Classification: 0.693669 Loss T 0.093399 Method MME

tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
S real T sketch Train Ep: 5200 lr0.007304951032175895 	 Loss Classification: 0.542112 Loss T 0.081372 Method MME

tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
S real T sketch Train Ep: 5300 lr0.007269113113340497 	 Loss Classification: 0.562688 Loss T 0.058572 Method MME

tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
S real T sketch Train Ep: 5400 lr0.007233682775402483 	 Loss Classification: 1.077897 Loss T 0.078325 Method MME

tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
S real T sketch Train Ep: 5500 lr0.007198652781227704 	 Loss Classification: 0.733186 Loss T 0.089007 Method MME


Labeled Target set: Average loss: 0.0680, Accuracy: 1063/1080 F1 (98.4259%)


Test set: Average loss: 1.9386, Accuracy: 15357/23808 F1 (64.5035%)


Val set: Average loss: 1.5949, Accuracy: 234/360 F1 (65.0000%)

best acc test 63.860887  acc val 65.000000 acc labeled target 98.425926
saving model...
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
S real T sketch Train Ep: 5600 lr0.007164016067791809 	 Loss Classification: 0.838535 Loss T 0.091351 Method MME

tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
S real T sketch Train Ep: 5700 lr0.0071297657409083726 	 Loss Classification: 0.552701 Loss T 0.076423 Method MME

tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
S real T sketch Train Ep: 5800 lr0.0070958950701490225 	 Loss Classification: 1.347397 Loss T 0.057987 Method MME

tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
S real T sketch Train Ep: 5900 lr0.007062397483947426 	 Loss Classification: 0.402444 Loss T 0.062340 Method MME

tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
200
201
202
203
204
205
206
207
208
209
210
211
212
213
214
215
216
217
218
219
220
221
222
223
224
225
226
227
228
229
230
231
232
233
234
235
236
237
238
239
240
241
242
243
244
245
246
247
248
249
250
251
252
253
254
255
256
257
258
259
260
261
262
263
264
265
266
267
268
269
270
271
272
273
274
275
276
277
278
279
280
281
282
283
284
285
286
287
288
289
290
291
292
293
294
295
296
297
298
299
300
301
302
303
304
305
306
307
308
309
310
311
312
313
314
315
316
317
318
319
320
321
322
323
324
325
326
327
328
329
330
331
332
333
334
335
336
337
338
339
340
341
342
343
344
345
346
347
348
349
350
351
352
353
354
355
356
357
358
359
360
361
362
363
364
365
366
367
368
369
370
371
372
373
374
375
376
377
Assigned Classwise weights to source
tensor(24., device='cuda:0', dtype=torch.float64)
S real T sketch Train Ep: 6000 lr0.007029266564879363 	 Loss Classification: 0.574901 Loss T 0.067260 Method MME


Labeled Target set: Average loss: 0.1708, Accuracy: 1047/1080 F1 (96.9444%)


Test set: Average loss: 2.1871, Accuracy: 14647/23808 F1 (61.5213%)


Val set: Average loss: 1.7103, Accuracy: 230/360 F1 (63.8889%)

best acc test 63.860887  acc val 63.888889 acc labeled target 96.944444
saving model...
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
S real T sketch Train Ep: 6100 lr0.006996496045111504 	 Loss Classification: 0.233324 Loss T 0.074432 Method MME

tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
S real T sketch Train Ep: 6200 lr0.00696407980201184 	 Loss Classification: 0.202000 Loss T 0.076088 Method MME

tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
S real T sketch Train Ep: 6300 lr0.006932011853915101 	 Loss Classification: 0.439443 Loss T 0.094012 Method MME

tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
S real T sketch Train Ep: 6400 lr0.006900286356036734 	 Loss Classification: 1.077974 Loss T 0.043996 Method MME

tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
S real T sketch Train Ep: 6500 lr0.006868897596529406 	 Loss Classification: 0.789848 Loss T 0.065785 Method MME


Labeled Target set: Average loss: 0.0324, Accuracy: 1074/1080 F1 (99.4444%)


Test set: Average loss: 1.8911, Accuracy: 15766/23808 F1 (66.2214%)


Val set: Average loss: 1.5888, Accuracy: 241/360 F1 (66.9444%)

best acc test 63.860887  acc val 66.944444 acc labeled target 99.444444
saving model...
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
S real T sketch Train Ep: 6600 lr0.006837839992676177 	 Loss Classification: 0.189820 Loss T 0.067094 Method MME

tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
S real T sketch Train Ep: 6700 lr0.006807108087214876 	 Loss Classification: 0.830803 Loss T 0.064451 Method MME

tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
S real T sketch Train Ep: 6800 lr0.006776696544788352 	 Loss Classification: 0.292415 Loss T 0.072137 Method MME

tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
S real T sketch Train Ep: 6900 lr0.006746600148515609 	 Loss Classification: 1.178702 Loss T 0.089319 Method MME

tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
S real T sketch Train Ep: 7000 lr0.006716813796678979 	 Loss Classification: 0.320482 Loss T 0.084437 Method MME


Labeled Target set: Average loss: 0.0376, Accuracy: 1071/1080 F1 (99.1667%)


Test set: Average loss: 1.8545, Accuracy: 15948/23808 F1 (66.9859%)


Val set: Average loss: 1.5566, Accuracy: 248/360 F1 (68.8889%)

best acc test 66.985887  acc val 68.888889 acc labeled target 99.166667
saving model...
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
S real T sketch Train Ep: 7100 lr0.006687332499522798 	 Loss Classification: 0.313040 Loss T 0.067007 Method MME

tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
S real T sketch Train Ep: 7200 lr0.006658151376159165 	 Loss Classification: 0.026527 Loss T 0.051377 Method MME

tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
S real T sketch Train Ep: 7300 lr0.00662926565157663 	 Loss Classification: 0.442714 Loss T 0.047077 Method MME

tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
S real T sketch Train Ep: 7400 lr0.006600670653747793 	 Loss Classification: 0.680246 Loss T 0.047246 Method MME

tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
200
201
202
203
204
205
206
207
208
209
210
211
212
213
214
215
216
217
218
219
220
221
222
223
224
225
226
227
228
229
230
231
232
233
234
235
236
237
238
239
240
241
242
243
244
245
246
247
248
249
250
251
252
253
254
255
256
257
258
259
260
261
262
263
264
265
266
267
268
269
270
271
272
273
274
275
276
277
278
279
280
281
282
283
284
285
286
287
288
289
290
291
292
293
294
295
296
297
298
299
300
301
302
303
304
305
306
307
308
309
310
311
312
313
314
315
316
317
318
319
320
321
322
323
324
325
326
327
328
329
330
331
332
333
334
335
336
337
338
339
340
341
342
343
344
345
346
347
348
349
350
351
352
353
354
355
356
357
358
359
360
361
362
363
364
365
366
367
368
369
370
371
372
373
374
375
376
377
Assigned Classwise weights to source
tensor(24., device='cuda:0', dtype=torch.float64)
S real T sketch Train Ep: 7500 lr0.0065723618108320175 	 Loss Classification: 0.517907 Loss T 0.061409 Method MME


Labeled Target set: Average loss: 0.1116, Accuracy: 1051/1080 F1 (97.3148%)


Test set: Average loss: 2.1512, Accuracy: 15108/23808 F1 (63.4577%)


Val set: Average loss: 1.8434, Accuracy: 226/360 F1 (62.7778%)

best acc test 66.985887  acc val 62.777778 acc labeled target 97.314815
saving model...
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
S real T sketch Train Ep: 7600 lr0.006544334648469591 	 Loss Classification: 0.120648 Loss T 0.058444 Method MME

tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
S real T sketch Train Ep: 7700 lr0.006516584787163857 	 Loss Classification: 0.259117 Loss T 0.089209 Method MME

tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
S real T sketch Train Ep: 7800 lr0.006489107939747966 	 Loss Classification: 0.592818 Loss T 0.067101 Method MME

tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
S real T sketch Train Ep: 7900 lr0.0064618999089330565 	 Loss Classification: 0.089267 Loss T 0.067546 Method MME

tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
S real T sketch Train Ep: 8000 lr0.006434956584934828 	 Loss Classification: 0.512777 Loss T 0.065363 Method MME


Labeled Target set: Average loss: 0.0257, Accuracy: 1075/1080 F1 (99.5370%)


Test set: Average loss: 1.8953, Accuracy: 16059/23808 F1 (67.4521%)


Val set: Average loss: 1.5521, Accuracy: 249/360 F1 (69.1667%)

best acc test 67.452117  acc val 69.166667 acc labeled target 99.537037
saving model...
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
S real T sketch Train Ep: 8100 lr0.006408273943175546 	 Loss Classification: 0.434864 Loss T 0.064941 Method MME

tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
S real T sketch Train Ep: 8200 lr0.006381848042058713 	 Loss Classification: 0.196282 Loss T 0.056854 Method MME

tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
S real T sketch Train Ep: 8300 lr0.0063556750208137005 	 Loss Classification: 0.412304 Loss T 0.070695 Method MME

tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
S real T sketch Train Ep: 8400 lr0.006329751097407787 	 Loss Classification: 0.527410 Loss T 0.056542 Method MME

tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
S real T sketch Train Ep: 8500 lr0.0063040725665231365 	 Loss Classification: 0.388307 Loss T 0.071029 Method MME


Labeled Target set: Average loss: 0.0479, Accuracy: 1068/1080 F1 (98.8889%)


Test set: Average loss: 1.9363, Accuracy: 15920/23808 F1 (66.8683%)


Val set: Average loss: 1.5171, Accuracy: 250/360 F1 (69.4444%)

best acc test 66.868280  acc val 69.444444 acc labeled target 98.888889
saving model...
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
S real T sketch Train Ep: 8600 lr0.006278635797596355 	 Loss Classification: 0.240290 Loss T 0.064890 Method MME

tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
S real T sketch Train Ep: 8700 lr0.006253437232918371 	 Loss Classification: 0.955639 Loss T 0.059652 Method MME

tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
S real T sketch Train Ep: 8800 lr0.0062284733857924735 	 Loss Classification: 0.136422 Loss T 0.053389 Method MME

tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
S real T sketch Train Ep: 8900 lr0.006203740838748417 	 Loss Classification: 0.383737 Loss T 0.048846 Method MME

tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
200
201
202
203
204
205
206
207
208
209
210
211
212
213
214
215
216
217
218
219
220
221
222
223
224
225
226
227
228
229
230
231
232
233
234
235
236
237
238
239
240
241
242
243
244
245
246
247
248
249
250
251
252
253
254
255
256
257
258
259
260
261
262
263
264
265
266
267
268
269
270
271
272
273
274
275
276
277
278
279
280
281
282
283
284
285
286
287
288
289
290
291
292
293
294
295
296
297
298
299
300
301
302
303
304
305
306
307
308
309
310
311
312
313
314
315
316
317
318
319
320
321
322
323
324
325
326
327
328
329
330
331
332
333
334
335
336
337
338
339
340
341
342
343
344
345
346
347
348
349
350
351
352
353
354
355
356
357
358
359
360
361
362
363
364
365
366
367
368
369
370
371
372
373
374
375
376
377
Assigned Classwise weights to source
tensor(24., device='cuda:0', dtype=torch.float64)
S real T sketch Train Ep: 9000 lr0.006179236241810624 	 Loss Classification: 0.514077 Loss T 0.074755 Method MME


Labeled Target set: Average loss: 0.0895, Accuracy: 1056/1080 F1 (97.7778%)


Test set: Average loss: 2.0822, Accuracy: 15488/23808 F1 (65.0538%)


Val set: Average loss: 1.7449, Accuracy: 229/360 F1 (63.6111%)

best acc test 66.868280  acc val 63.611111 acc labeled target 97.777778
saving model...
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
S real T sketch Train Ep: 9100 lr0.006154956310818535 	 Loss Classification: 0.635980 Loss T 0.073915 Method MME

tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
S real T sketch Train Ep: 9200 lr0.0061308978257973165 	 Loss Classification: 0.421364 Loss T 0.061038 Method MME

tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
S real T sketch Train Ep: 9300 lr0.0061070576293771285 	 Loss Classification: 0.208865 Loss T 0.049847 Method MME

tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
S real T sketch Train Ep: 9400 lr0.006083432625259276 	 Loss Classification: 0.404738 Loss T 0.062697 Method MME

tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
S real T sketch Train Ep: 9500 lr0.006060019776727621 	 Loss Classification: 0.227351 Loss T 0.058774 Method MME


Labeled Target set: Average loss: 0.0218, Accuracy: 1075/1080 F1 (99.5370%)


Test set: Average loss: 1.9023, Accuracy: 16270/23808 F1 (68.3384%)


Val set: Average loss: 1.5740, Accuracy: 249/360 F1 (69.1667%)

best acc test 66.868280  acc val 69.166667 acc labeled target 99.537037
saving model...
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
S real T sketch Train Ep: 9600 lr0.00603681610520369 	 Loss Classification: 0.487923 Loss T 0.063450 Method MME

tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
S real T sketch Train Ep: 9700 lr0.0060138186888439825 	 Loss Classification: 0.267011 Loss T 0.060022 Method MME

tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
S real T sketch Train Ep: 9800 lr0.005991024661178045 	 Loss Classification: 0.515894 Loss T 0.052169 Method MME

tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
S real T sketch Train Ep: 9900 lr0.0059684312097859115 	 Loss Classification: 0.266378 Loss T 0.044726 Method MME

tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
S real T sketch Train Ep: 10000 lr0.005946035575013605 	 Loss Classification: 1.240101 Loss T 0.072252 Method MME


Labeled Target set: Average loss: 0.0443, Accuracy: 1067/1080 F1 (98.7963%)


Test set: Average loss: 1.9198, Accuracy: 16364/23808 F1 (68.7332%)


Val set: Average loss: 1.5751, Accuracy: 241/360 F1 (66.9444%)

best acc test 66.868280  acc val 66.944444 acc labeled target 98.796296
saving model...
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
S real T sketch Train Ep: 10100 lr0.005923835048725393 	 Loss Classification: 0.532740 Loss T 0.067335 Method MME

tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
S real T sketch Train Ep: 10200 lr0.005901826973091593 	 Loss Classification: 0.529738 Loss T 0.038128 Method MME

tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
S real T sketch Train Ep: 10300 lr0.005880008739410735 	 Loss Classification: 0.111871 Loss T 0.067284 Method MME

tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
S real T sketch Train Ep: 10400 lr0.005858377786964935 	 Loss Classification: 0.200978 Loss T 0.050705 Method MME

tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
200
201
202
203
204
205
206
207
208
209
210
211
212
213
214
215
216
217
218
219
220
221
222
223
224
225
226
227
228
229
230
231
232
233
234
235
236
237
238
239
240
241
242
243
244
245
246
247
248
249
250
251
252
253
254
255
256
257
258
259
260
261
262
263
264
265
266
267
268
269
270
271
272
273
274
275
276
277
278
279
280
281
282
283
284
285
286
287
288
289
290
291
292
293
294
295
296
297
298
299
300
301
302
303
304
305
306
307
308
309
310
311
312
313
314
315
316
317
318
319
320
321
322
323
324
325
326
327
328
329
330
331
332
333
334
335
336
337
338
339
340
341
342
343
344
345
346
347
348
349
350
351
352
353
354
355
356
357
358
359
360
361
362
363
364
365
366
367
368
369
370
371
372
373
374
375
376
377
Assigned Classwise weights to source
tensor(24., device='cuda:0', dtype=torch.float64)
S real T sketch Train Ep: 10500 lr0.005836931601907399 	 Loss Classification: 0.087380 Loss T 0.056471 Method MME


Labeled Target set: Average loss: 0.1413, Accuracy: 1044/1080 F1 (96.6667%)


Test set: Average loss: 2.2173, Accuracy: 15282/23808 F1 (64.1885%)


Val set: Average loss: 2.0609, Accuracy: 223/360 F1 (61.9444%)

best acc test 66.868280  acc val 61.944444 acc labeled target 96.666667
saving model...
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
S real T sketch Train Ep: 10600 lr0.005815667716181004 	 Loss Classification: 0.345844 Loss T 0.060926 Method MME

tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
S real T sketch Train Ep: 10700 lr0.005794583706466925 	 Loss Classification: 0.377018 Loss T 0.045492 Method MME

tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
S real T sketch Train Ep: 10800 lr0.005773677193162352 	 Loss Classification: 0.360285 Loss T 0.041192 Method MME

tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
S real T sketch Train Ep: 10900 lr0.005752945839386346 	 Loss Classification: 0.909928 Loss T 0.047612 Method MME

tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
S real T sketch Train Ep: 11000 lr0.005732387350012933 	 Loss Classification: 0.750069 Loss T 0.050854 Method MME


Labeled Target set: Average loss: 0.0317, Accuracy: 1074/1080 F1 (99.4444%)


Test set: Average loss: 1.9190, Accuracy: 16425/23808 F1 (68.9894%)


Val set: Average loss: 1.6380, Accuracy: 253/360 F1 (70.2778%)

best acc test 68.989415  acc val 70.277778 acc labeled target 99.444444
saving model...
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
S real T sketch Train Ep: 11100 lr0.005711999470730565 	 Loss Classification: 0.616386 Loss T 0.040779 Method MME

tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
S real T sketch Train Ep: 11200 lr0.005691779987127103 	 Loss Classification: 0.678610 Loss T 0.059766 Method MME

tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
S real T sketch Train Ep: 11300 lr0.005671726723799515 	 Loss Classification: 0.743997 Loss T 0.033615 Method MME

tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
S real T sketch Train Ep: 11400 lr0.005651837543487509 	 Loss Classification: 0.256179 Loss T 0.044020 Method MME

tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
S real T sketch Train Ep: 11500 lr0.005632110346230358 	 Loss Classification: 0.223892 Loss T 0.063248 Method MME


Labeled Target set: Average loss: 0.0485, Accuracy: 1067/1080 F1 (98.7963%)


Test set: Average loss: 1.8907, Accuracy: 16517/23808 F1 (69.3758%)


Val set: Average loss: 1.4869, Accuracy: 250/360 F1 (69.4444%)

best acc test 68.989415  acc val 69.444444 acc labeled target 98.796296
saving model...
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
S real T sketch Train Ep: 11600 lr0.005612543068546177 	 Loss Classification: 0.372587 Loss T 0.049756 Method MME

tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
S real T sketch Train Ep: 11700 lr0.005593133682632953 	 Loss Classification: 0.561938 Loss T 0.039843 Method MME

tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
S real T sketch Train Ep: 11800 lr0.005573880195590681 	 Loss Classification: 0.157346 Loss T 0.040250 Method MME

tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
S real T sketch Train Ep: 11900 lr0.0055547806486639095 	 Loss Classification: 0.059020 Loss T 0.058009 Method MME

tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
200
201
202
203
204
205
206
207
208
209
210
211
212
213
214
215
216
217
218
219
220
221
222
223
224
225
226
227
228
229
230
231
232
233
234
235
236
237
238
239
240
241
242
243
244
245
246
247
248
249
250
251
252
253
254
255
256
257
258
259
260
261
262
263
264
265
266
267
268
269
270
271
272
273
274
275
276
277
278
279
280
281
282
283
284
285
286
287
288
289
290
291
292
293
294
295
296
297
298
299
300
301
302
303
304
305
306
307
308
309
310
311
312
313
314
315
316
317
318
319
320
321
322
323
324
325
326
327
328
329
330
331
332
333
334
335
336
337
338
339
340
341
342
343
344
345
346
347
348
349
350
351
352
353
354
355
356
357
358
359
360
361
362
363
364
365
366
367
368
369
370
371
372
373
374
375
376
377
Assigned Classwise weights to source
tensor(24., device='cuda:0', dtype=torch.float64)
S real T sketch Train Ep: 12000 lr0.005535833116504121 	 Loss Classification: 0.309114 Loss T 0.042287 Method MME


Labeled Target set: Average loss: 0.0896, Accuracy: 1054/1080 F1 (97.5926%)


Test set: Average loss: 2.0772, Accuracy: 15861/23808 F1 (66.6205%)


Val set: Average loss: 1.7108, Accuracy: 234/360 F1 (65.0000%)

best acc test 68.989415  acc val 65.000000 acc labeled target 97.592593
saving model...
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
S real T sketch Train Ep: 12100 lr0.00551703570645129 	 Loss Classification: 0.282388 Loss T 0.042079 Method MME

tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
S real T sketch Train Ep: 12200 lr0.005498386557834078 	 Loss Classification: 0.280041 Loss T 0.047327 Method MME

tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
S real T sketch Train Ep: 12300 lr0.00547988384128807 	 Loss Classification: 0.232941 Loss T 0.043045 Method MME

tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
S real T sketch Train Ep: 12400 lr0.005461525758091539 	 Loss Classification: 0.317194 Loss T 0.049842 Method MME

tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
S real T sketch Train Ep: 12500 lr0.005443310539518174 	 Loss Classification: 0.461414 Loss T 0.040669 Method MME


Labeled Target set: Average loss: 0.0382, Accuracy: 1070/1080 F1 (99.0741%)


Test set: Average loss: 1.8799, Accuracy: 16612/23808 F1 (69.7749%)


Val set: Average loss: 1.4333, Accuracy: 252/360 F1 (70.0000%)

best acc test 68.989415  acc val 70.000000 acc labeled target 99.074074
saving model...
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
S real T sketch Train Ep: 12600 lr0.005425236446206295 	 Loss Classification: 0.095935 Loss T 0.044858 Method MME

tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
S real T sketch Train Ep: 12700 lr0.005407301767544059 	 Loss Classification: 0.052192 Loss T 0.044688 Method MME

tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
S real T sketch Train Ep: 12800 lr0.005389504821070177 	 Loss Classification: 0.596462 Loss T 0.053941 Method MME

tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
S real T sketch Train Ep: 12900 lr0.005371843951889677 	 Loss Classification: 0.392836 Loss T 0.052826 Method MME

tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
S real T sketch Train Ep: 13000 lr0.0053543175321042955 	 Loss Classification: 0.251096 Loss T 0.058632 Method MME


Labeled Target set: Average loss: 0.0288, Accuracy: 1073/1080 F1 (99.3519%)


Test set: Average loss: 1.9278, Accuracy: 16606/23808 F1 (69.7497%)


Val set: Average loss: 1.6338, Accuracy: 248/360 F1 (68.8889%)

best acc test 68.989415  acc val 68.888889 acc labeled target 99.351852
saving model...
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
S real T sketch Train Ep: 13100 lr0.005336923960257046 	 Loss Classification: 0.664799 Loss T 0.054816 Method MME

tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
S real T sketch Train Ep: 13200 lr0.0053196616607905645 	 Loss Classification: 0.458208 Loss T 0.034373 Method MME

tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
S real T sketch Train Ep: 13300 lr0.0053025290835188275 	 Loss Classification: 0.445329 Loss T 0.023229 Method MME

tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
S real T sketch Train Ep: 13400 lr0.005285524703111859 	 Loss Classification: 0.762195 Loss T 0.056787 Method MME

tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
200
201
202
203
204
205
206
207
208
209
210
211
212
213
214
215
216
217
218
219
220
221
222
223
224
225
226
227
228
229
230
231
232
233
234
235
236
237
238
239
240
241
242
243
244
245
246
247
248
249
250
251
252
253
254
255
256
257
258
259
260
261
262
263
264
265
266
267
268
269
270
271
272
273
274
275
276
277
278
279
280
281
282
283
284
285
286
287
288
289
290
291
292
293
294
295
296
297
298
299
300
301
302
303
304
305
306
307
308
309
310
311
312
313
314
315
316
317
318
319
320
321
322
323
324
325
326
327
328
329
330
331
332
333
334
335
336
337
338
339
340
341
342
343
344
345
346
347
348
349
350
351
352
353
354
355
356
357
358
359
360
361
362
363
364
365
366
367
368
369
370
371
372
373
374
375
376
377
Assigned Classwise weights to source
tensor(24., device='cuda:0', dtype=torch.float64)
S real T sketch Train Ep: 13500 lr0.005268647018593052 	 Loss Classification: 0.327003 Loss T 0.043743 Method MME


Labeled Target set: Average loss: 0.0555, Accuracy: 1071/1080 F1 (99.1667%)


Test set: Average loss: 2.0490, Accuracy: 16094/23808 F1 (67.5991%)


Val set: Average loss: 1.6160, Accuracy: 248/360 F1 (68.8889%)

best acc test 68.989415  acc val 68.888889 acc labeled target 99.166667
saving model...
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
S real T sketch Train Ep: 13600 lr0.005251894552848747 	 Loss Classification: 0.129210 Loss T 0.050211 Method MME

tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
S real T sketch Train Ep: 13700 lr0.005235265852149712 	 Loss Classification: 0.078156 Loss T 0.045691 Method MME

tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
S real T sketch Train Ep: 13800 lr0.005218759485684187 	 Loss Classification: 0.423928 Loss T 0.044113 Method MME

tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
S real T sketch Train Ep: 13900 lr0.005202374045102174 	 Loss Classification: 0.560650 Loss T 0.046843 Method MME

tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
tensor(24., device='cuda:0', dtype=torch.float64)
S real T sketch Train Ep: 14000 lr0.005186108144070652 	 Loss Classification: 0.378229 Loss T 0.060539 Method MME


Labeled Target set: Average loss: 0.0376, Accuracy: 1073/1080 F1 (99.3519%)


Test set: Average loss: 1.9163, Accuracy: 16685/23808 F1 (70.0815%)


Val set: Average loss: 1.5619, Accuracy: 244/360 F1 (67.7778%)

